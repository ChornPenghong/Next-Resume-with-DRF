openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /api/educations/:
    get:
      operationId: api_educations_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserEducation'
          description: ''
    post:
      operationId: api_educations_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEducation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserEducation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserEducation'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEducation'
          description: ''
  /api/educations/{id}/:
    get:
      operationId: api_educations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user education.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEducation'
          description: ''
    put:
      operationId: api_educations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user education.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEducation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserEducation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserEducation'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEducation'
          description: ''
    patch:
      operationId: api_educations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user education.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserEducation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserEducation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserEducation'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEducation'
          description: ''
    delete:
      operationId: api_educations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user education.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/experiences/:
    get:
      operationId: api_experiences_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Experience'
          description: ''
    post:
      operationId: api_experiences_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experience'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experience'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experience'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
  /api/experiences/{id}/:
    get:
      operationId: api_experiences_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user experience.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
    put:
      operationId: api_experiences_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user experience.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experience'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experience'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experience'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
    patch:
      operationId: api_experiences_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user experience.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExperience'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExperience'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExperience'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
    delete:
      operationId: api_experiences_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user experience.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/institutes/:
    get:
      operationId: api_institutes_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institute'
          description: ''
    post:
      operationId: api_institutes_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Institute'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Institute'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Institute'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institute'
          description: ''
  /api/institutes/{id}/:
    get:
      operationId: api_institutes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this institute.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institute'
          description: ''
    put:
      operationId: api_institutes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this institute.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Institute'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Institute'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Institute'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institute'
          description: ''
    patch:
      operationId: api_institutes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this institute.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInstitute'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInstitute'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInstitute'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institute'
          description: ''
    delete:
      operationId: api_institutes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this institute.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/languages/:
    get:
      operationId: api_languages_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Language'
          description: ''
    post:
      operationId: api_languages_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Language'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Language'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Language'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
          description: ''
  /api/languages/{id}/:
    get:
      operationId: api_languages_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this language.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
          description: ''
    put:
      operationId: api_languages_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this language.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Language'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Language'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Language'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
          description: ''
    patch:
      operationId: api_languages_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this language.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLanguage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLanguage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLanguage'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
          description: ''
    delete:
      operationId: api_languages_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this language.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/languages/list-all/:
    get:
      operationId: api_languages_list_all_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
          description: ''
  /api/login:
    post:
      operationId: api_login_create
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/positions/:
    get:
      operationId: api_positions_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserPosition'
          description: ''
    post:
      operationId: api_positions_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPosition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserPosition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserPosition'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPosition'
          description: ''
  /api/positions/{id}/:
    get:
      operationId: api_positions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user position.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPosition'
          description: ''
    put:
      operationId: api_positions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user position.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPosition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserPosition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserPosition'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPosition'
          description: ''
    patch:
      operationId: api_positions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user position.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserPosition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserPosition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserPosition'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPosition'
          description: ''
    delete:
      operationId: api_positions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user position.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/positions/list-all/:
    get:
      operationId: api_positions_list_all_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPosition'
          description: ''
  /api/register:
    post:
      operationId: api_register_create
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/skills/:
    get:
      operationId: api_skills_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
          description: ''
    post:
      operationId: api_skills_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Skill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Skill'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
          description: ''
  /api/skills/{id}/:
    get:
      operationId: api_skills_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this skill.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
          description: ''
    put:
      operationId: api_skills_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this skill.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Skill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Skill'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
          description: ''
    patch:
      operationId: api_skills_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this skill.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSkill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSkill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSkill'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
          description: ''
    delete:
      operationId: api_skills_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this skill.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/skills/list-all/:
    get:
      operationId: api_skills_list_all_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
          description: ''
  /api/test_token:
    get:
      operationId: api_test_token_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/update-profile:
    put:
      operationId: api_update_profile_update
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/user-detail:
    get:
      operationId: api_user_detail_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/user-languages/:
    get:
      operationId: api_user_languages_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserLangauge'
          description: ''
    post:
      operationId: api_user_languages_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLangauge'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLangauge'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLangauge'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLangauge'
          description: ''
  /api/user-languages/{id}/:
    get:
      operationId: api_user_languages_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user language.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLangauge'
          description: ''
    put:
      operationId: api_user_languages_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user language.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLangauge'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLangauge'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLangauge'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLangauge'
          description: ''
    patch:
      operationId: api_user_languages_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user language.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserLangauge'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserLangauge'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserLangauge'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLangauge'
          description: ''
    delete:
      operationId: api_user_languages_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user language.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/user-languages/list-all/:
    get:
      operationId: api_user_languages_list_all_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLangauge'
          description: ''
  /api/user-references/:
    get:
      operationId: api_user_references_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserReference'
          description: ''
    post:
      operationId: api_user_references_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserReference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserReference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserReference'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserReference'
          description: ''
  /api/user-references/{id}/:
    get:
      operationId: api_user_references_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user reference.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserReference'
          description: ''
    put:
      operationId: api_user_references_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user reference.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserReference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserReference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserReference'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserReference'
          description: ''
    patch:
      operationId: api_user_references_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user reference.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserReference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserReference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserReference'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserReference'
          description: ''
    delete:
      operationId: api_user_references_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user reference.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/user-references/list-all/:
    get:
      operationId: api_user_references_list_all_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserReference'
          description: ''
components:
  schemas:
    Experience:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        position:
          allOf:
          - $ref: '#/components/schemas/UserPosition'
          readOnly: true
        user_profile:
          allOf:
          - $ref: '#/components/schemas/UserProfile'
          readOnly: true
        position_id:
          type: integer
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        company:
          type: string
          maxLength: 100
        responsibilities:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        description:
          type: string
      required:
      - company
      - created_at
      - description
      - id
      - position
      - position_id
      - responsibilities
      - start_date
      - updated_at
      - user_profile
    Institute:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          maxLength: 100
        address:
          type: string
        website:
          type: string
          format: uri
          maxLength: 200
      required:
      - address
      - created_at
      - id
      - name
      - updated_at
    Language:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          maxLength: 100
      required:
      - created_at
      - id
      - name
      - updated_at
    PatchedExperience:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        position:
          allOf:
          - $ref: '#/components/schemas/UserPosition'
          readOnly: true
        user_profile:
          allOf:
          - $ref: '#/components/schemas/UserProfile'
          readOnly: true
        position_id:
          type: integer
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        company:
          type: string
          maxLength: 100
        responsibilities:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        description:
          type: string
    PatchedInstitute:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          maxLength: 100
        address:
          type: string
        website:
          type: string
          format: uri
          maxLength: 200
    PatchedLanguage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          maxLength: 100
    PatchedSkill:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          maxLength: 100
    PatchedUserEducation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        institute:
          allOf:
          - $ref: '#/components/schemas/Institute'
          readOnly: true
        user_profile:
          allOf:
          - $ref: '#/components/schemas/UserProfile'
          readOnly: true
        institute_id:
          type: integer
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        degree:
          type: string
          maxLength: 100
        field_of_study:
          type: string
          maxLength: 100
        grade:
          type: string
          maxLength: 100
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        description:
          type: string
    PatchedUserLangauge:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        language:
          allOf:
          - $ref: '#/components/schemas/Language'
          readOnly: true
        user_profile:
          allOf:
          - $ref: '#/components/schemas/UserProfile'
          readOnly: true
        language_id:
          type: integer
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        level:
          type: string
          maxLength: 100
    PatchedUserPosition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
    PatchedUserReference:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_profile:
          allOf:
          - $ref: '#/components/schemas/UserProfile'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          maxLength: 100
        company:
          type: string
          maxLength: 100
        position:
          type: string
          maxLength: 100
        phone:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
          maxLength: 254
    Skill:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          maxLength: 100
      required:
      - created_at
      - id
      - name
      - updated_at
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
      required:
      - id
      - username
    UserEducation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        institute:
          allOf:
          - $ref: '#/components/schemas/Institute'
          readOnly: true
        user_profile:
          allOf:
          - $ref: '#/components/schemas/UserProfile'
          readOnly: true
        institute_id:
          type: integer
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        degree:
          type: string
          maxLength: 100
        field_of_study:
          type: string
          maxLength: 100
        grade:
          type: string
          maxLength: 100
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        description:
          type: string
      required:
      - created_at
      - degree
      - field_of_study
      - id
      - institute
      - institute_id
      - start_date
      - updated_at
      - user_profile
    UserLangauge:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        language:
          allOf:
          - $ref: '#/components/schemas/Language'
          readOnly: true
        user_profile:
          allOf:
          - $ref: '#/components/schemas/UserProfile'
          readOnly: true
        language_id:
          type: integer
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        level:
          type: string
          maxLength: 100
      required:
      - created_at
      - id
      - language
      - language_id
      - level
      - updated_at
      - user_profile
    UserPosition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    UserProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 20
        address:
          type: string
        description:
          type: string
        linkedin:
          type: string
          format: uri
          maxLength: 200
        github:
          type: string
          format: uri
          maxLength: 200
        website:
          type: string
          format: uri
          maxLength: 200
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
      required:
      - address
      - description
      - email
      - full_name
      - id
      - phone
      - user
    UserReference:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_profile:
          allOf:
          - $ref: '#/components/schemas/UserProfile'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          maxLength: 100
        company:
          type: string
          maxLength: 100
        position:
          type: string
          maxLength: 100
        phone:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - company
      - created_at
      - email
      - id
      - name
      - phone
      - position
      - updated_at
      - user_profile
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
